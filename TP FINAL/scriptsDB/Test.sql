--TEST 1 EMAIL EXISTENTE
SELECT  mailExists('gonzalo.errandonea@gmail.com');

--TEST 2 EMAIL NO EXISTENTE
SELECT  mailExists('gonzalo.erradonea@gmail.com');

--TEST 3 EMAIL MAL ESCRITO
SELECT  mailExists('gonzalo.errandoneagmail.com');

--TEST 4 CUIL EXISTENTE
SELECT cuilExists('20424644309');

--TEST 5 CUIL INEXISTENTE
SELECT cuilExists('1111111111');

--TEST 6 SE PERMITE LOGIN
SELECT  validPassword('gonzalo.errandonea@gmail.com', 'RACINGcampeon123');

--TEST 7 NO SE PERMITE LOGIN POR CONTRASEÑA FALSA
SELECT  validPassword('gonzalo.errandonea@gmail.com', 'RACINGca123');

--TEST 8 NO SE PERMITE LOGIN POR CORREO FALSO
SELECT  validPassword('gonzalo.errandona@gmail.com', 'RACINGcampeon123');

--TEST 9 LIBRO EXISTENTE
SELECT  libroExists('123-234-513');

--TEST 10 LIBRO INEXISTENTE
SELECT  libroExists('13-234-513');

--TEST 11 OBTENER USUARIO POR EMAIL EXISTENTE
SELECT * FROM getUserByMail('gonzalo.errandonea@gmail.com');

--TEST 12 NO SE OBTIENE EL USUARIO SI NO EXISTE
SELECT * FROM getUserByMail('gonzalo.erraonea@gmail.com');

--TEST 13 AÑADIR USUARIO
SELECT insertUser(2022232319, 'Alberto Moyano', 'moyano@gmail.com', '213hs', '3446332211');

--TEST 14 AÑADIR USUARIO CON UN CUIL REGISTRADO (no se admite)
SELECT insertUser(21345983824, 'Paula Moyano', 'pauMoyano@gmail.com', '213hs', '3446332211');

--TEST 14 AÑADIR USUARIO CON UN EMAIL REGISTRADO (no se admite)
SELECT insertUser(2022435319, 'Miriam Moyano', 'mariano.32.132@gmail.com', '213hs', '3446332211');

--TEST 15 AGREGAR UN LIBRO
SELECT agregarLibro('231-222-511', 'https://http2.mlimages.com/231-222-511', 'Narnia 3', '10/12/2022', 99.99, 1000, 'aqui deberia de haber una descripcion', '1', '1');

--TEST 16 AGREGAR UN LIBRO CON ISBN YA REGISTRADO
SELECT agregarLibro('234-543-251', 'https://http2.mlimages.com/231-222-511', 'Narnia 3', '10/12/2022', 99.99, 1000, 'aqui deberia de haber una descripcion', '1', '1');

--TEST 17 AGREGAR STOCK A UN LIBRO EXISTENTE
SELECT agregarLibroComprado('234-543-251', 10);

--TEST 18 AGREGAR STOCK A UN LIBRO NO EXISTENTE
SELECT agregarLibroComprado('1', 10);

--TEST 19 CONSULTAR LOS FAVORITOS DE UN USUARIO POR CUIL EXISTENTE
SELECT * FROM getFavUsuarioByCuil('20424644309');

--TEST 20 CONSULTAR LOS FAVORITOS DE UN USUARIO POR CUIL INEXISTENTE
SELECT * FROM getFavUsuarioByCuil('2009');

--TEST 21 CONSULTAR EL CARRITO DE UN USUARIO POR CUIL EXISTENTE
SELECT * FROM getCarritoUsuarioByCuil('20424644309');

--TEST 22 CONSULTAR EL CARRITO DE UN USUARIO POR CUIL INEXISTENTE
SELECT * FROM getCarritoUsuarioByCuil('2009');

--TEST 23 CONSULTAR FACTURAS DE UN USUARIO POR CUIL EXISTENTE
SELECT * FROM getFacturaUsuarioByCuil('20424644309');

--TEST 23 CONSULTAR FACTURAS DE UN USUARIO POR CUIL INEXISTENTE
SELECT * FROM getFacturaUsuarioByCuil('2049');

--TEST 24 OBTENER LIBROS VIA ISBN EXISTENTE
SELECT * FROM getLibroByIsbn('234-543-251');

--TEST 24 OBTENER LIBROS VIA ISBN NO EXISTENTE
SELECT * FROM getLibroByIsbn('123-23');

--TESTE 25 OBTENER LIBROS DE MAYOR A MENOR
SELECT * FROM getLibrosOrdenadosMayorAMenor();

--TESTE 25 OBTENER LIBROS DE MENOR A MAYOR
SELECT * FROM getLibrosOrdenadosMenorAMayor();

--TEST 26 OBTENER LIBROS MEDIANTE RANGO DE PRECIO
SELECT * FROM getLibrosEnRangoPrecio(100.00, 200.00);

--TEST 27 OBTENER LIBROS MEDIANTE RANGO DE PRECIO MAL PUESTO
SELECT * FROM getLibrosEnRangoPrecio(200.00, 100.00);

--TEST 28 OBTENER LIBROS POR TEMA EXISTENTE
SELECT  * FROM getLibrosByTema('Drama');

--TEST 29 OBTENER LIBROS POR TEMA INEXISTENTE
SELECT  * FROM getLibrosByTema('Dama');

--TEST 30 OBTENER LIBROS POR PALABRAS
SELECT * FROM getLibrosByTitulo('Harry');

--TEST 31 OBTENER LIBROS QUE NO COINCIDAN CON PALABRAS PUESTAS EN LA FUNCION
SELECT * FROM getLibrosByTitulo('Poer');

--TEST 32 COMPLETAR LA COMPRA DE UN USUARIO CON CARRITO EXISTENTE Y DIRECCION A DONDE ENVIAR LOS LIBROS
SELECT compraUsuarioRealizada(1);

--TEST 33 COMPLETAR LA COMPRA DE UN USUARIO CON CARRITO INEXISTENTE
SELECT compraUsuarioRealizada(0);

--TEST 34 COMPLETAR LA COMPRA DEL USUARIO SIN QUE ESTE TENGA UNA DIRECCION A DONDE ENVIAR LOS LIBROS COMPRADOS
SELECT compraUsuarioRealizada(3);

--TEST 35 COMPROBAR SI QUEDA STOCK CON UN NUMERO INFERIOR AL STOCK QUE HAY EN DICHO LIRBO
SELECT quedaStock(9, '234-543-251');

--TEST 36 COMPROBAR SI QUEDA STOCK CON UN NUMERO SUPERIOR AL STOCK QUE HAY EN DICHO LIRBO
SELECT quedaStock(11, '234-543-251');

--TESTE 37 COMPROBAR SI EXISTE UNA DIRECCION VIA ID DEL CARRITO DE UN USUARIO
SELECT existeDireccion(1);

--TESTE 37 COMPROBAR SI EXISTE UNA DIRECCION VIA ID DEL CARRITO DE UN USUARIO EL CUAL NO TIENE DIRECCION CARGADA
SELECT existeDireccion(3);

