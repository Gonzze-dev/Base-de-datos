CREATE OR REPLACE FUNCTION convertirLineaCarritoAOrden_detalle() RETURNS TRIGGER AS
$convertirLineaCarritoAOrden_detalle$
DECLARE
    maxIdOrden intPos;
    precioLibro Tprice;
BEGIN
    
    IF NOT existeDireccion(OLD.id_carrito) THEN
        RAISE EXCEPTION 'NO SE PUDO REALIZAR LA COMPRA DEL LIBRO CON ISBN %', OLD.isbn USING HINT = 'EL USUARIO CON ID CARRITO ' || OLD.id_carrito || ' NO TIENE UNA DIRECCION';
    END 

    IF NOT quedaStock(OLD.cantidad, OLD.isbn) THEN
        ROLLBACK;
        RAISE EXCEPTION 'NO SE PUDO REALIZAR LA COMPRA DEL LIBRO CON ISBN %', OLD.isbn USING HINT = 'LA CANTIDAD A COMPRAR ES MAYOR QUE LA DEL LIBRO';
    END 
    
    ALTER TABLE orden_detalle
        DROP CONSTRAINT IF EXISTS FK_orden;
    
    SELECT max(orden.id) INTO maxIdOrden FROM orden;
    
    SELECT libro.precio INTO precioLibro FROM libro 
    WHERE libro.isbn = OLD.isbn;
    
    IF maxIdOrden IS NULL THEN
        maxIdOrden := 1;
    ELSE
        maxIdOrden := maxIdOrden + 1;
    END IF;
    
    INSERT INTO orden_detalle (precio, cantidad, id_orden, isbn, id_carrito)
    VALUES (precioLibro,OLD.cantidad, maxIdOrden, OLD.isbn, OLD.id_carrito);
    
    UPDATE libro SET
        stock = stock - OLD.cantidad
    WHERE isbn = OLD.isbn;
    
    RETURN NEW;
END;
$convertirLineaCarritoAOrden_detalle$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_convertirLineaCarritoAOrden_detalle AFTER DELETE ON linea_carrito
FOR EACH ROW EXECUTE PROCEDURE convertirLineaCarritoAOrden_detalle();