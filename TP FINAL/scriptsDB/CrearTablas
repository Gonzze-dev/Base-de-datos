CREATE OR REPLACE FUNCTION eliminarLineaCarrito() RETURNS TRIGGER AS
$eliminarLineaCarrito$
DECLARE
    qry varchar;
    precioLibro Tprice;
BEGIN
    qry := 'SELECT precio FROM libro WHERE isbn = OLD.ISBN';
    
    EXECUTE query INTO precioLibro;
    
    INSERT INTO orden_detalle (precio, cantidad, isbn)
    VALUES(precioLibro, OLD.cantidad, OLD.isbn);

    RETURN NEW;
END;
$eliminarLineaCarrito$ 
LANGUAGE plpgsql;

CREATE TRIGGER trigger_eliminarLineaCarrito BEFORE DELETE ON linea_carrito
FOR EACH ROW EXECUTE PROCEDURE eliminarLineaCarrito();

CREATE OR REPLACE FUNCTION actualizarId_ordenDeOrdenDetalle() RETURNS TRIGGER AS
$actualizarId_ordenDeOrdenDetalle$
DECLARE
    qryPrecio varchar;
    maxId intPos;
BEGIN
    qryPrecio := 'SELECT sum(precio)::Tprice FROM orden_detalle WHERE id_orden = null';
    EXECUTE query INTO maxId;
    
    INSERT INTO orden (fecha, total, cuil, id_direccion)
    
    UPDATE orden_detalle
        SET id_orden = maxId
    WHERE id_orden = NULL;

    RETURN NEW;
END;
$actualizarId_ordenDeOrdenDetalle$ 
LANGUAGE plpgsql;

CREATE TRIGGER trigger_actualizarId_ordenDeOrdenDetalle AFTER DELETE ON linea_carrito
FOR EACH ROW EXECUTE PROCEDURE actualizarId_ordenDeOrdenDetalle();
